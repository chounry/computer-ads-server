# Generated by Django 2.0.4 on 2018-05-26 14:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('market', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CPU_brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Brand Name')),
            ],
        ),
        migrations.CreateModel(
            name='CPU_gen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='2 or else', max_length=10, verbose_name='CPU Generation')),
            ],
        ),
        migrations.CreateModel(
            name='CPU_info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Intel i5-3470', max_length=30)),
                ('proc_num', models.CharField(help_text='3470', max_length=30, verbose_name='Processor Number')),
                ('num_of_thread', models.PositiveSmallIntegerField(verbose_name='Number of Threads')),
                ('base_fr', models.DecimalField(decimal_places=1, max_digits=4, verbose_name='Base Frequency')),
                ('cache', models.PositiveSmallIntegerField(verbose_name='Cache')),
                ('tdp', models.PositiveSmallIntegerField(verbose_name='Power Consumtion')),
                ('max_memory', models.PositiveSmallIntegerField()),
                ('num_of_mem_chann', models.PositiveSmallIntegerField(verbose_name='# of Memory Channels')),
                ('max_mem_bandwidth', models.CharField(max_length=5, verbose_name='Max Memory bandwidth')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('cpu_brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpu.CPU_brand')),
                ('cpu_gen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpu.CPU_gen', verbose_name='CPU Gen')),
            ],
        ),
        migrations.CreateModel(
            name='CPU_market',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField(max_length=2000)),
                ('prize', models.DecimalField(decimal_places=2, max_digits=7)),
                ('cpu', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cpu.CPU_info')),
                ('market', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Market_info')),
            ],
        ),
        migrations.CreateModel(
            name='CPU_model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='i5 or i3', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='')),
                ('cpu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpu.CPU_info')),
            ],
        ),
        migrations.CreateModel(
            name='Num_of_core',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveSmallIntegerField()),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='HQ or K', max_length=20, verbose_name='Series')),
            ],
        ),
        migrations.CreateModel(
            name='Socket_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Socket Type')),
            ],
        ),
        migrations.CreateModel(
            name='Vertical_segment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Desktop or Mobile', max_length=50, verbose_name='Vertical Segment')),
            ],
        ),
        migrations.AddField(
            model_name='cpu_info',
            name='cpu_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpu.CPU_model'),
        ),
        migrations.AddField(
            model_name='cpu_info',
            name='num_of_core',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpu.Num_of_core', verbose_name='# of Cores'),
        ),
        migrations.AddField(
            model_name='cpu_info',
            name='series',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpu.Series'),
        ),
        migrations.AddField(
            model_name='cpu_info',
            name='socket_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpu.Socket_type'),
        ),
        migrations.AddField(
            model_name='cpu_info',
            name='vertical_segment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpu.Vertical_segment'),
        ),
    ]
